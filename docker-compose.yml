services:
  database:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - .env
    networks:
      - database-network
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql # SQL script for seeding db with data

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5433:80
    environment:
      - PGADMIN_SERVER_JSON_FILE=/var/lib/pgadmin/server.json
    env_file:
      - .env
    networks:
      - database-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin/
      - ./data/pgadmin_server_config.json:/var/lib/pgadmin/server.json
    depends_on:
      - database

  api:
    build:
      context: Inventory-Management
      dockerfile: Dockerfile
      target: runner
      additional_contexts:
        assets: ./
    ports:
      - 8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - database-network
      - nginx-network
    depends_on:
      - database
 
  frontend:
    build: 
      context: frontend
      dockerfile: Dockerfile
      target: runner
    ports:
      - 57122
    networks:
      - nginx-network
    depends_on:
      - api

  nginx:
    build: 
      context: nginx
      dockerfile: Dockerfile
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - nginx-network
    depends_on:
      - frontend
      - api

networks:
  database-network:
    driver: bridge
  nginx-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data: